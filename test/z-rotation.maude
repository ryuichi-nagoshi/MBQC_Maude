
load mbqc-lang.maude

mod z-rotation is 
    pr POSTPROCESS .
    pr MEASURE .
    pr MBQC-LANG .

    var V  : Vect .
    var LB : List{TRIV2BIT} .
    var LN : List{TRIV2PNAT} .
    var LOC : List{TRIV2OUTCOME} . 

    --- Target State: Rz(Ï€/4) . |psi>
    --- Input: |psi> = alpha0 . |0> + beta0 . |1> 
    op Rz|psi> : -> Vect .
    eq Rz|psi> = alpha0 . |0> + (beta0 .* (1 ./ sqrt(2)) i .+ beta0 .* 1 ./ sqrt(2)) . |1> .

    --- checker
    op checkRz : List{TRIV2OUTCOME} -> MyBool .
    eq checkRz((nil).List{TRIV2OUTCOME}) = true .
    ceq checkRz([LB , LN , V]  LOC) = checkRz(LOC) if | < Rz|psi> | V > |^2 == 1 .
    ceq checkRz([LB , LN , V]  LOC) = false if | < Rz|psi> | V > |^2 =/= 1 .

    
endm




---[Test] z-rotation
red checkRz(pattern(2, < 0 @ |psi> >,
            X?(2,1)
            Z?(2,0)
            (zeroB, nil)[M(1, 0pi)](zeroB, nil)
            (zeroB, nil)[M(0, -pi/4)](zeroB, nil)
            E(1,2) E(0,1)
        )) .